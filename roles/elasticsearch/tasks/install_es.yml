---
- name: create directory
  file: path="{{base_home}}" state=directory

# backup  es_home if exists
- name: check elasticsearch_home
  stat: path="{{es_home}}"
  ignore_errors: true
  register: eshome_dir_check

# backup  es_home if exists
- name: backup logstash home
#command: mv {{es_home}} {{es_home}}_backuped_by_ansible
  shell: tar czvf elasticsearch_backuped_by_ansible.{{ansible_date_time.epoch}}.tar.gz {{es_home}} && rm -rf {{es_home}}
  when: eshome_dir_check.stat.exists == true

# create a tmp dir for extracting elasticsearch tarball
- name: create directory
  file: path="{{base_home}}/.tmp_elasticsearch" state=directory
  register: tmp_check

# clean tmp dir when it's already exists
- name: clean tmp dir
  shell: rm -rf {{base_home}}/.tmp_elasticsearch/*
  when: tmp_check.changed == False

# extract elasticsearch tarball to a tmp dir
- name: unpack tarball to remote node
  unarchive: src="{{es_tarball}}" dest="{{base_home}}/.tmp_elasticsearch"
  tags: unpack

# could not determine the directory name of es tarball extracted
#- name: check if unpack module worked
#  stat: path="{{es_home}}"
#  ignore_errors: true
#  register: unpack_check
#  tags: unpack
#
#- fail: msg="unpack elasticsearch failed!"
#  when: unpack_check.stat.exists == false
#  tags: unpack

# move elasticsearch application from tmp dir to install target
- name: install elasticsearch to elasticsearch_home
  shell: mv {{base_home}}/.tmp_elasticsearch/* {{es_home}}

# clean tmp dir
- name: remove tmp directory
  file: path="{{base_home}}/.tmp_elasticsearch" state=absent

- name: update ENV
  lineinfile:
    dest: "{{env_profile}}"
    line: "export PATH={{es_home}}/bin:$PATH"
    state: present
    create: yes



- name: remove default config/elasticsearch.yml
  file: path="{{es_home}}/config/{{item}}" state=absent
  with_items:
    - "{{es_logging_config}}"
    - "{{es_config}}"
  tags: setup_srv

- name: update configuration file
  template: src="{{item}}.j2" dest="{{es_home}}/config/{{item}}"
  with_items:
    - "{{es_logging_config}}"
    - "{{es_config}}"
  tags: setup_srv

- name: install elasticsearch service
  template: src="{{item.src}}" dest="{{item.dest}}" mode="{{item.mode}}"
  with_items:
    - {src: "{{es_srvname}}.j2", dest: "/etc/init.d/{{es_srvname}}", mode: 755}
    - {src: "default.j2", dest: "/etc/default/{{es_srvname}}", mode: 644}
    - {src: "elasticsearch_rotate.j2", dest: "/etc/logrotate.d/elasticsearch", mode: 644}
  sudo: yes
  sudo_user: root
  notify:
    - enable elasticsearch
    - restart elasticsearch
  tags: setup_srv
